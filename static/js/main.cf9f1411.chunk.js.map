{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.module.css","components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","Notification","message","className","s","Statistics","good","neutral","bad","total","positivePercentage","title","statistics","FeedbackOptions","options","onLeaveFeedback","onClick","btn","Section","children","App","state","addGrade","nameGrade","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,WAAa,iC,gBCAjED,EAAOC,QAAU,CAAC,IAAM,+B,qBCAxBD,EAAOC,QAAU,CAAC,QAAU,gC,gBCA5BD,EAAOC,QAAU,CAAC,MAAQ,yB,6JCUXC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,oBAAIC,UAAWC,IAAEF,QAAjB,SAA2BA,O,gBCalBG,EAfI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OAAOD,IACL,qCACE,oBAAIN,UAAWC,IAAEO,MAAjB,wBACA,oBAAGR,UAAWC,IAAEQ,WAAhB,mBAAmCN,KACnC,oBAAGH,UAAWC,IAAEQ,WAAhB,sBAAsCL,KACtC,oBAAGJ,UAAWC,IAAEQ,WAAhB,kBAAkCJ,KAClC,oBAAGL,UAAWC,IAAEQ,WAAhB,oBAAoCH,OACpC,oBAAGN,UAAWC,IAAEQ,WAAhB,gCAAgDF,IAAhD,UAGF,cAAC,EAAD,CAAcR,QAAQ,uB,gBCKXW,EAjBS,SAAC,GAAiC,EAA/BC,QAAgC,IAAvBC,EAAsB,EAAtBA,gBAElC,OACE,qCACE,wBAAQC,QAAS,kBAAMD,EAAgB,SAASZ,UAAWC,IAAEa,IAA7D,kBAGA,wBAAQD,QAAS,kBAAMD,EAAgB,YAAYZ,UAAWC,IAAEa,IAAhE,qBAGA,wBAAQD,QAAS,kBAAMD,EAAgB,QAAQZ,UAAWC,IAAEa,IAA5D,qB,iBCGSC,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUR,EAAY,EAAZA,MAC3B,OACE,qCACGA,GAAS,oBAAIR,UAAWC,IAAEO,MAAjB,SAAyBA,IAClCQ,MCFDC,E,4MACJC,MAAQ,CACNf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPc,SAAW,SAACC,GACV,EAAKC,UAAS,SAACC,GACb,OAAO,eAAGF,EAAYE,EAAUF,GAAa,O,EAGjDG,mBAAqB,WACnB,OAAO,EAAKL,MAAMb,IAAM,EAAKa,MAAMf,KAAO,EAAKe,MAAMd,S,EAEvDoB,gCAAkC,WAEhC,OADc,EAAKD,qBAEfE,KAAKC,MAAyB,IAAlB,EAAKR,MAAMf,KAAc,EAAKoB,sBAC1C,G,4CAEN,WAEE,MAA+BI,KAAKT,MAA5Bf,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAQvB,OAEE,cADA,CACA,sBAKE,cAAC,EAAD,CAASG,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAASgB,KAAKT,MACdN,gBAAiBe,KAAKR,aAS1B,cAAC,EAAD,CAASX,MAAM,GAAf,SACE,cAAC,EAAD,CACEL,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqB,KAAKJ,mBACZhB,mBAAoBoB,KAAKH,2C,GAxDnBI,aA+DHX,I,MChEfY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cf9f1411.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__2Yvhh\",\"statistics\":\"Statistics_statistics__3JQza\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__34QXE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__3i9_0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__Omj_-\"};","import React from \"react\";\r\nimport s from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <h3 className={s.message}>{message}</h3>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport Notification from \"../Notification\";\r\nimport s from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return total() ? (\r\n    <>\r\n      <h2 className={s.title}>Statistics</h2>\r\n      <p className={s.statistics}>Good: {good}</p>\r\n      <p className={s.statistics}>Neutral: {neutral}</p>\r\n      <p className={s.statistics}>Bad: {bad}</p>\r\n      <p className={s.statistics}>Total: {total()}</p>\r\n      <p className={s.statistics}>Positive feedback: {positivePercentage()}%</p>\r\n    </>\r\n  ) : (\r\n    <Notification message=\"No feedback given\"></Notification>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  //   const { good, neutral, bad } = options;\r\n  return (\r\n    <>\r\n      <button onClick={() => onLeaveFeedback(\"good\")} className={s.btn}>\r\n        Good\r\n      </button>\r\n      <button onClick={() => onLeaveFeedback(\"neutral\")} className={s.btn}>\r\n        Neutral\r\n      </button>\r\n      <button onClick={() => onLeaveFeedback(\"bad\")} className={s.btn}>\r\n        Bad\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.css\";\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <>\r\n      {title && <h1 className={s.title}>{title}</h1>}\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import React, { Component } from \"react\";\r\n// import Feedback from \"./components/Feedback\";\r\nimport Statistics from \"./components/Statistics\";\r\nimport FeedbackOptions from \"./components/FeedbackOptions\";\r\nimport Section from \"./components/Section\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  addGrade = (nameGrade) => {\r\n    this.setState((prevState) => {\r\n      return { [nameGrade]: prevState[nameGrade] + 1 };\r\n    });\r\n  };\r\n  countTotalFeedback = () => {\r\n    return this.state.bad + this.state.good + this.state.neutral;\r\n  };\r\n  countPositiveFeedbackPercentage = () => {\r\n    const total = this.countTotalFeedback();\r\n    return total\r\n      ? Math.round((this.state.good * 100) / this.countTotalFeedback())\r\n      : 0;\r\n  };\r\n  render() {\r\n    // const grade = this.state;\r\n    const { good, neutral, bad } = this.state;\r\n    // const addGrade = this.addGrade;\r\n    // const countTotalFeedback = () => {\r\n    //   return this.state.bad + this.state.good + this.state.neutral;\r\n    // };\r\n    // const countPositiveFeedbackPercentage = () => {\r\n    //   return this.state.good * 100 / this.countTotalFeedback();\r\n    // };\r\n    return (\r\n      // <Feedback grade={grade} addGrade={addGrade} total={countTotalFeedback} />\r\n      <>\r\n        {/* <h1>Please leave feedback</h1> */}\r\n        {/* <button onClick={() => addGrade(\"good\")}>Good</button>\r\n        <button onClick={() => addGrade(\"neutral\")}>Neutral</button>\r\n        <button onClick={() => addGrade(\"bad\")}>Bad</button> */}\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={this.addGrade}\r\n          />\r\n        </Section>\r\n        {/* <h2>Statistics</h2>\r\n        <p>Good: {good}</p>\r\n        <p>Neutral: {neutral}</p>\r\n        <p>Bad: {bad}</p> */}\r\n        {/* <p>Total: {this.countTotalFeedback()}</p>\r\n        <p>Positive feedback: {this.countPositiveFeedbackPercentage()}%</p> */}\r\n        <Section title=\"\">\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={this.countTotalFeedback}\r\n            positivePercentage={this.countPositiveFeedbackPercentage}\r\n          />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}